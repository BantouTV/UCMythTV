/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -p PairingScreen_p PairingScreen.xml
 *
 * qdbusxml2cpp is Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef PAIRINGSCREEN_P_H_1291391006
#define PAIRINGSCREEN_P_H_1291391006

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface uk.co.bbc.UniversalControl.PairingScreen
 */
class UkCoBbcUniversalControlPairingScreenInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "uk.co.bbc.UniversalControl.PairingScreen"; }

public:
    UkCoBbcUniversalControlPairingScreenInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~UkCoBbcUniversalControlPairingScreenInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<> deleteClient(const QString &CID)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(CID);
        return asyncCallWithArgumentList(QLatin1String("deleteClient"), argumentList);
    }

    inline QDBusPendingReply<QStringList> getClientList()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("getClientList"), argumentList);
    }

    inline QDBusPendingReply<QString> versionInfo()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("versionInfo"), argumentList);
    }

    inline QDBusPendingReply<> willClose()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("willClose"), argumentList);
    }

    inline QDBusPendingReply<QString> willOpen()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("willOpen"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void clientListChanged();
    void shouldStopDisplay();
};

namespace uk {
  namespace co {
    namespace bbc {
      namespace UniversalControl {
        typedef ::UkCoBbcUniversalControlPairingScreenInterface PairingScreen;
      }
    }
  }
}
#endif
